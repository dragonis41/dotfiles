#!/bin/bash

sentences=(
    "BEGIN RSA PRIVATE KEY"
    "shadowed-private-key"
    "BEGIN PGP PRIVATE KEY BLOCK"
    "BEGIN DSA PRIVATE KEY"
    "BEGIN EC PRIVATE KEY"
    "BEGIN OPENSSH PRIVATE KEY"
    "BEGIN PRIVATE KEY"
    "PuTTY-User-Key-File-2"
    "BEGIN SSH2 ENCRYPTED PRIVATE KEY"
    "BEGIN ENCRYPTED PRIVATE KEY"
    "BEGIN OpenVPN Static key V1"
)

blacklists=(
    "01.check-for-private-key.hook"
)


# Get all staged files
STAGED_FILES=$(git diff --staged --name-only --diff-filter=d --)


# Check if there are staged files
if [[ -z $STAGED_FILES ]]; then
    echo -e "Check for private key................................(no files to check)\x1B[44mSKIPPED\x1B[0m"
    exit 0
fi


PRIVATE_KEY_FOUND=false


# Function to check a single file for private keys
check_file() {
    local file="$1"
    # shellcheck disable=SC2155
    local filename=$(basename "$file")

    # Check if the file is blacklisted
    if [[ "${blacklists[*]}" =~ $filename ]]; then
        return 0
    fi

    # Check if the file is binary
    if ! file "$file" | grep -q text; then
        return 0
    fi

    # Check if it contains a private key
    for sentence in "${sentences[@]}"; do
        if grep -q -e "$sentence" "$file"; then
            echo -e "\x1B[31mA private key has been found in staged file: $file\x1B[0m"
            echo -e "Matching pattern: $sentence"
            PRIVATE_KEY_FOUND=true
            return 1
        fi
    done

    return 0
}


# Check all files
while IFS= read -r file; do
    check_file "$file"
done <<< "$STAGED_FILES"


if [[ "$PRIVATE_KEY_FOUND" = true ]]; then
    # Ask the user if they want to ignore the warning
    # shellcheck disable=SC2162
    read -p $'\nDo you want to proceed with the commit anyway? [y/N]: ' IGNORE_WARNING < /dev/tty
    if [[ $IGNORE_WARNING =~ ^([yY][eE][sS]|[yY])$ ]]; then
        echo -e "Check for private key...................................................\x1B[43mSKIPPED\x1B[0m"
        exit 0
    else
        echo -e "Check for private key....................................................\x1B[41mFAILED\x1B[0m"
        exit 1
    fi
else
    echo -e "Check for private key....................................................\x1B[42mPASSED\x1B[0m"
    exit 0
fi
