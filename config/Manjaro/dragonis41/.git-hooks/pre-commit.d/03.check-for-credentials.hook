#!/bin/bash

# Regex pattern for credential detection
regex='(?i)(["'\'']?)(?:[\w_-]*)(?:password|secret|sslcert|(?<!yubi|public.)key|token)(?:[-_]*[\w])*\1\s*[:=]\s*(["'\'']?)[\w\s-]+\2|[\w\.-]{1,64}@(?:[\w-]+\.)+[\w-]{2,4}'

# Get all staged files
STAGED_FILES=$(git diff --staged --name-only --diff-filter=d --)

# Function to check a single file for credentials
check_file_for_credentials() {
    local file="$1"
    local findings=""
    if grep -Piwn "$regex" "$file" >/dev/null 2>&1; then
        findings+="$file\n"  # File name
        while IFS= read -r line; do
            line_number=$(echo "$line" | awk -F: '{print $1}')
            line_content=$(echo "$line" | cut -d: -f2-)
            trimmed="${line_content#"${line_content%%[![:space:]]*}"}"
            trimmed="${trimmed%"${trimmed##*[![:space:]]*}"}"
            findings+="\x1B[33mL$line_number:\t\x1B[31m$trimmed\x1B[0m\n"
        done < <(grep -Piwn "$regex" "$file")
        echo -e "$findings"
        return 0
    fi
    return 1
}

# Check if there are staged files
if [[ -z "$STAGED_FILES" ]]; then
    echo -e "Check for credentials................................(no files to check)\x1B[44mSKIPPED\x1B[0m"
    exit 0
fi

# Variable to store all findings
FINDINGS=""

# Process each file
while IFS= read -r file; do
    FILE_FINDINGS=$(check_file_for_credentials "$file")
    if [[ -n "$FILE_FINDINGS" ]]; then
        FINDINGS+="\n$FILE_FINDINGS\n"  # Add newline before and after each file's findings
    fi
done <<< "$STAGED_FILES"

if [[ -n "$FINDINGS" ]]; then
    echo -e "\x1B[31mPossible credential(s) has been found:\x1B[0m"
    echo -e "$FINDINGS"

    # Ask the user if they want to ignore the warning
    # shellcheck disable=SC2162
    read -p $'\nDo you want to proceed with the commit anyway? [y/N]: ' IGNORE_WARNING < /dev/tty
    if [[ $IGNORE_WARNING =~ ^([yY][eE][sS]|[yY])$ ]]; then
        echo -e "Check for credentials...................................................\x1B[43mSKIPPED\x1B[0m"
        exit 0
    else
        echo -e "Check for credentials....................................................\x1B[41mFAILED\x1B[0m"
        exit 1
    fi
else
    echo -e "Check for credentials....................................................\x1B[42mPASSED\x1B[0m"
    exit 0
fi
