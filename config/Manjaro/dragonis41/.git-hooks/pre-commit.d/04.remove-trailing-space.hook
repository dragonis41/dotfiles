#!/bin/bash

## Blacklist those files.
file_blacklist=(
    "mytestfile.txt"
)
## Blacklist those file extensions
# If a file is a binary file, it will be automatically skipped.
extension_blacklist=(
    "md"
    "mo"
)

## Get all staged files.
STAGED_FILES=$(git diff --staged --name-only --diff-filter=d --)

## Check if there are staged files.
if [[ -z $STAGED_FILES ]]; then
    echo -e "Remove trailing space................................(no files to check)\x1B[44mSKIPPED\x1B[0m"
## otherwise we can do stuff with these changed files.
else
    # Use a while loop with read to properly handle filenames with spaces
    echo "$STAGED_FILES" | while IFS= read -r file; do
        filename=$(basename "$file")

        # Check if the file is in the file blacklist.
        if [[ ${file_blacklist[*]} =~ $filename ]]; then
            continue
        fi

        # Check if the file extension is in the extension blacklist.
        extension="${filename##*.}"
        if [[ ${extension_blacklist[*]} =~ $extension ]]; then
            continue
        fi

        # Check if the file is binary
        if ! file "$file" | grep -q text; then
            continue
        fi

        # Remove trailing whitespace and re-stage the file if it was modified.
        if sed -i 's/[ \t]*$//' "$file"; then
            git add "$file"
        else
            echo -e "Remove trailing space....................................................\x1B[41mFAILED\x1B[0m"
            exit 1
        fi
    done

    # Check the exit status of the while loop
    if [ $? -eq 0 ]; then
        echo -e "Remove trailing space....................................................\x1B[42mPASSED\x1B[0m"
    fi
fi
